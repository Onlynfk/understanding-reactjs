
USEFFECT BASICS WITH LOCALSTORAGE AND DEBOUNCING

######################################################
ReactSnippets/README.md at master · jinsihou19/ReactSnippets
https://github.com/jinsihou19/ReactSnippets/blob/master/README.md

​using useEffect 
runs after very component state changes
no dependencies -- runs only once 

 localstorage pretty cool


useEffect with no dependencies runs only once
useEffect handles side effect  ( forms change, response form http)
--- a response to some other action ins useEffect

notes 
-- built in api, component-intrnal variable should not be added as dependies yeah !!

or stuff like declared variables that really depends on it __

​useEffect cleanup function !!!!!!!​
Debouncing (okay !!)
using setTimeout() --- 

the cleanup function runs after very next side effect
execution


USEFFECT WITH OBJECT DESTRUCTING AND USEREDUCER

#####################################################################
ReactSnippets/README.md at master · jinsihou19/ReactSnippets
https://github.com/jinsihou19/ReactSnippets/blob/master/README.md

​​Introduction to useReducer() -- state managment

if you update a state that depends on another state
then nerge it with one state

understanding  useReducer

const (state, dispatchfn) = useReducer(reducerFn, initialState, initFn);

-state - snapshot of the state
-dispatchfn - trgiger an update of the state
-reducerfn - ( trgigers auto, once an action is dispatched( via dispatchfn()) - it recieves te latest state snapshot and shouf return new, updated state 
(prevState, action) => newState
-initlalState

reducerFn call - doesnt't need to interact with the component fucntions


​​object destructing 
add an alias  ----> oaky need to know thes
okay allais is when you take sth from sth and store in another thing inside that sth
 -- is called an alia s assignemt
const (isValid:emailisVaid} = emailState

***notes  
when  adding objects as dependency access the property is the object, cause some objects loops



USING REACT CREATECONTEXT and REACT USECONTEXT HOOK
######################################################

​​Bad -- Props drilling Behind the scence state storage  
-- Kebab case
TO USE CONTEXT
you first provide -- tells react there is a context
you then consume it
Provider --- all jsx elements in it access all its properites(also sets a value)
Consumer - this cosumers the value provided by Provider
 or Listen to it -using React useContext Hook



USECONTEXT HOOK
#####################################################

​​component wide object to mange state  and functioncool!!!!!!!!!!!only 
when specifici  you use contextr

#notes
props for configurations
useContext for state managment
- it should not be used to replace all compoents communictaion and props
- oonly used when needed when there is serious prop drilling
#cons of react context
- is not optimized for high frequency changes

RULES OF USING HOOKS
###########################
- only call react hooks in react components  and custom hooks
- don't call hooks at the top level eg in nested functions
- don't call then in any book component
- you must = nit add everything in to a useeffect think!

