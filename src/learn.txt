
USEFFECT BASICS WITH LOCALSTORAGE AND DEBOUNCING

######################################################
ReactSnippets/README.md at master · jinsihou19/ReactSnippets
https://github.com/jinsihou19/ReactSnippets/blob/master/README.md

​using useEffect 
runs after very component state changes
no dependencies -- runs only once 

 localstorage pretty cool


useEffect with no dependencies runs only once
useEffect handles side effect  ( forms change, response form http)
--- a response to some other action ins useEffect

notes 
-- built in api, component-intrnal variable should not be added as dependies yeah !!

or stuff like declared variables that really depends on it __

​useEffect cleanup function !!!!!!!​
Debouncing (okay !!)
using setTimeout() --- 

the cleanup function runs after very next side effect
execution


USEFFECT WITH OBJECT DESTRUCTING AND USEREDUCER

#####################################################################
ReactSnippets/README.md at master · jinsihou19/ReactSnippets
https://github.com/jinsihou19/ReactSnippets/blob/master/README.md

​​Introduction to useReducer() -- state managment

if you update a state that depends on another state
then nerge it with one state

understanding  useReducer

const (state, dispatchfn) = useReducer(reducerFn, initialState, initFn);

-state - snapshot of the state
-dispatchfn - trgiger an update of the state
-reducerfn - ( trgigers auto, once an action is dispatched( via dispatchfn()) - it recieves te latest state snapshot and shouf return new, updated state 
(prevState, action) => newState
-initlalState

reducerFn call - doesnt't need to interact with the component fucntions


​​object destructing 
add an alias  ----> oaky need to know thes
okay allais is when you take sth from sth and store in another thing inside that sth
 -- is called an alia s assignemt
const (isValid:emailisVaid} = emailState


######################################################